# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build apk

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Fetch master branch
      uses: actions/checkout@v2
      
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
      
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build APK with Gradle
      run: ./gradlew clean :app:assembleDebug
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: $(date '%Y-%m-%d')
        release_name: Release $(date '%Y-%m-%d')
        draft: false
        prerelease: false
      
    - name: Upload Release Asset (*.apk)
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./app/build/outputs/apk/debug/app-debug.apk
        asset_name: InfoStudium.apk
        asset_content_type: application/vnd.android.package-archive
